[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cookie-confusion-toolkit"
dynamic = ["version"]
description = "A comprehensive toolkit for testing cookie handling vulnerabilities"
readme = "README.md"
authors = [{name = "geeknik", email = "geeknik@protonmail.com"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Security",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.31.0",
    "selenium>=4.15.0",
    "urllib3>=2.0.0",
    "colorama>=0.4.6",
    "tqdm>=4.66.0",
    "python-dateutil>=2.8.2",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "aiohttp>=3.9.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
]

[project.urls]
Homepage = "https://github.com/geeknik/cookie-confusion-toolkit"
Documentation = "https://cookie-confusion-toolkit.readthedocs.io/"
Repository = "https://github.com/geeknik/cookie-confusion-toolkit"
"Bug Tracker" = "https://github.com/geeknik/cookie-confusion-toolkit/issues"
Changelog = "https://github.com/geeknik/cookie-confusion-toolkit/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "bandit>=1.7.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

[project.scripts]
cct = "cookie_confusion_toolkit.cli:main"
cookie-confusion = "cookie_confusion_toolkit.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"cookie_confusion_toolkit" = ["templates/*", "config/*"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Common VCS dirs
  \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B601", "B602"]  # Skip paramiko and subprocess checks for now

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "F821"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    "venv",
]
max-complexity = 10
